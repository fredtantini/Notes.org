#+TODO: TODO(t) WAITING(w) | DONE(d) CANCELED(c)
#+TODO: À_ÉCRIRE(à) COMMENCÉ(o) EN_ATTENTE(e@) FINI(f) | ANNULÉ(a) PUBLIÉ(p)

* Ce fichier
blog et projets
** TODO Merger depuis les différents fichiers notes 
** TODO Réflexions
*** Ce fichier
**** découpage
- Entête pour explication fonctionnement du fichier
  - réflexions sur découpage/workflow

- Blog
  - liens/snippets/lab… au sens large donc 

- Projets/Dépôts

- Notes à intégrer aux endroits qui vont bien
  Des tags pour savoir où déplacer?
  - idée de billets
  - raccourci
  - bout de code
  - lien intéressant
***** CANCELED Pour chaque, déplacer réflexion découpage à l'intérieur…

***** Découpage ± identique ici avec réflexion
-> autres points plus propres

**** workflow

***** TODO [#A] ajouter tag pour savoir quoi faire + priorités
***** TODO [#A] Penser les tags et le workflow des fichiers orgs
****** TODO A_déplacer : voir quoi faire une fois le dépot/blog créé + tag de où
****** DONE renommer ancien blog
****** TODO fusionner correctement old_blog with new_blog

****** Utiliser [1/5] ?
****** TODO/DONE avec parent ?
****** tout timestamper ?

***** TODO Utiliser remember sur ce fichier

***** TODO Utiliser agenda sur ce fichier
***** DONE utiliser réflexion 
      avant de modifier structure/workflow -> les différentes solutions avec pour et contre
****** TODO Archiver quand réfléxion finie
‰C-c C-x a‰
******* TODO [#A] déplacer dans un fichier archive en gardant structure 
        -> a faire?
http://stackoverflow.com/questions/31666110/duplicate-tree-structure-in-org-mode-archive
****** si plusieurs propositions
******* mettre en DONE la choisie
******* CANCELED mettre en CANCELED les autres
***** todo statut
suivant découpage (‰C-c C-t d‰)
****** global
******* TODO(t) WAITING(w) | DONE(d!) CANCELED(c)
****** blog
******* À_ÉCRIRE(à!) COMMENCÉ(o!) EN_ATTENTE(e@) FINI(f!) | ANNULÉ(a@) PUBLIÉ(p!)
****** projet
****** notes
***** tags
suivant découpage
****** global
****** blog
****** projet
****** notes

***** propriétés
suivant découpage
****** global
****** blog
****** projet
****** notes

***** local setup (général)
***** quid des bouts de code/autres, mais perso ou pas à publier?
****** DONE réfléxion à faire sur l'organisation globale            :ARCHIVE:
******* 1
- notes -> ce fichier
- todolist -> privé
- notes-perso -> privé
******* DONE 2
- notes-famille-prive
- notes
- notes-info -> ce fichier

*** Blog
**** DONE quel CMS?                                                 :ARCHIVE:
partage avec com' / from emacs ?
***** KB
***** DONE pluxml
  
***** jenkins
***** pelican
***** WP
***** oblog
**** TODO pluxml à partir d'emacs
***** DONE 1er temps
‰C-c C-e C-b C-s h b‰
‰C-b‰ pour n'avoir que le corps de l'article
‰C-s‰ pour n’avoir que subtree
****** DONE modifier l'export html pour mettre dans un buffer seulement
***** TODO [#A] 2eme temps
voir pour faire l'export dans un fichier article xml en renseignant
correctement les balises

****** à faire

******* premier temps
******** création d'un .xml
********* nommé correctement
********** publication en brouillon, auteur en dur
********* construit correctement
********** DONE choix des catégories
*********** DONE lecture de categories.xml
*********** DONE si pas trouvé -> pas de création de catégorie
*********** DONE transfo de «categorie» en «001»
********** TODO tags
*********** -> mise a jour de tag.xml
******** fichier.org
********* keywords
********** TODO AUTHOR: à récupérer dans users.xml
********** title
********** date
********** préfixés par PLX_
*********** CAT
*********** TAG
******* deuxième temps
******** page statique
******** si catégorie pas trouvée -> on propose / on ajoute
******** brouillon = nv mot clé
****** liens
http://pluxopolis.net/article10/comprendre-le-nom-des-fichiers-xml-des-articles

http://pluxopolis.net/article12/structure-des-fichiers-xml-des-articles
création d'une ligne dans tags.xml
******* nom
_0001 .002 .001 .201304251142 .premier-article .xml

 - *_* est un caractère optionnel. Il indique que l'article est en attente de validation.
 - *0001* est l'identifiant de l'article. Il peut aller jusqu'à 9999, donc 9999 articles.

 - 002 contient l'identifiant de la catégorie dans laquelle l'article
   est classé. Il peut avoir plusieurs identifiants séparés par des
   virgules (exemple 001,002). Ici l'article est donc classé dans la
   catégorie 002. Il n'y a pas de limite dans le nombre de catégories
   possibles, du moment qu'elles sont bien séparées par des virgules.
   Il est possible d'avoir également la valeur draft qui indique que
   l'article est un brouillon, ou la valeur home qui indique que
   l'article est publié dans la catégorie Page d'accueil. Il est donc
   tout a fait possible d'avoir
   0001.001,002,draft.001.201304251142.premier-article.xml

 - 001 est l'identifiant de l'utilisateur qui a rédigé l'article.
 - 201304251142 est la date de publication de l'article. Cela peut
  être une date future. Cette date est de la forme AAAAMMJJHHMM où:
   AAAA = année
   MM = mois
   JJ = jour
   HH = heure
   MM = minute
 - premier-article est l'url de l'article. On la retrouve dans:
   http://mondomaine.com/index.php?article1/premier-article
 - xml est l'extension du fichier.




****** organisation
- faire un plux local?
- laisser l’organisation comme elle est?
- publier sur le site -> publish ou rsync?

***** TODO Dans Sites, éviter les doublons, possible de faire des dossiers dans plux?
-> osef, les .org sont justes la base des articles -> oui, garder les dossiers.

****** Soit dans data
- blog 
  - data
    article1
    article2
    - 2015
      - 08
        article1.org
        article1.org.html (ici?)
****** DONE Soit à la racine 
-> permet de garder structure actuelle
-> liens en dur dans article -> permet de rien changer si change encore de publication
- blog
  - data
    article1
    article2
- 2015
  - 08
    article1.org
    article1.org.html 
***** TODO [#A] Comment faire pour les liens vers les autres articles?
****** si en dur, on perd dans les .org
****** si en .org, on perd dans articles…
******* changer à la main
******* modifier la fonction d'export
**** Pour les billets au sens large (articles snippets)             :ARCHIVE:
***** réflexion organisation fichier                                :ARCHIVE:
****** ajouter un tag A_publier/En_cours/…
sous-arbre facile à obtenir -> on peut mettre n'importe où
****** ajouter un tag article/snipp/…
peut-être pour les notes
****** Mettre dans des headlines séparés
pénible à planifier
****** Utiliser des statuts TODO/DONE
doublon pour les projets
****** mix des status et tags
****** DONE Un dossier pour article/ql/statiques +  des statuts particuliers
- À_ÉCRIRE : une idée comme ça… / tag du début
- COMMENCÉ : billet commencé (+date)
- EN_ATTENTE : parce que quelque chose cloche quelque part (+raison)
- ANNULÉ : parce qu'obsolète… (+raison)
- FINI : billet fini sur le papier (À publier, mais À écrire commence déjà par à) (+date)
- PUBLIÉ : billet mis sur le site
******* Utiliser les properties pour local au dossier
Apparemment on peut pas -> 2 séquences
#+BEGIN_SRC elisp
TODO(t) | DONE(d!)
À_ÉCRIRE(à!) COMMENCÉ(c!) EN_ATTENTE(e@) FINI(f!) | ANNULÉ(a@) PUBLIÉ(p!)
#+END_SRC
Et utiliser ‰C-c C-t‰
***** réflexion organisation items                                  :ARCHIVE:
                                
****** Catégories
******* nom_catégorie
******** STATUT(À_ÉCRIRE) titre
********* idée 1
********* suite
******** STATUT(COMMENCÉ) vrai titre
[[lien vers fichier .org]]
éventuellement une description?
****** Statiques
******* PAO
[[lien vers fichier .org de l'article]]
******* Cheatsheet truc
******** STATUT(PUBLIÉ) vrai titre
[[lien vers fichier .org de l'article]]

******* Liste projet
[[lien vers fichier .org de l'article]]

***** réflexion projets                                             :ARCHIVE:
une fois terminés
****** ajouter une entrée à liste de billets à faire
****** déplacer dans Idée d'article
****** DONE ajouter une entrée à Articles
****** DONE tagger À écrire
***** réflexion découpage blog                                      :ARCHIVE:

- statiques
  - cheatsheet
    - cheatsheet emacs
    - cheatsheet org
    - cheatsheet python
  - liste des projets? <= catégories projets? (non: va lister les articles)
    - 1 seule page avec tous les projets organisés… comme on peut
  - lab
    - 1 seule page avec tous les labs
  - pao
- catégories
  - articles
    - diatribes
      même si je pense pas utiliser beaucoup
    - paremboles
      défaut?
    - pas de catégories
    - guides
      tuto
    - snippet : idem projet
    - lab
    - blog
      vie du blog
  - projet
    une fois un projet fini (en cours) : un article
  - quicklink
    - raccourci
    - trouvaille
      page intéressante
    - mémo
      note pour moi même/coude
  - [à ajouter au fur et à mesure]
***** réflexion tag                                                 :ARCHIVE:
- un tag .org = un tag blog:
  - mémo tag bash
  - cheatsheet tag emacs
  - trouvaille tag math, css

***** réflexion lien blog-projet                                    :ARCHIVE:
****** article (catégories)
| catégorie         | dépot                                             |
|-------------------+---------------------------------------------------|
| diatribes         | site/blog/data/articles                           |
| paremboles        | site/blog/data/articles                           |
| pas de catégories | site/blog/data/articles                           |
| guides            | site/blog/data/articles (+guide?)                 |
| snippet           | site/blog/data/articles + snippet                 |
| lab               | site/blog/data/articles + lab                     |
| blog              | site/blog/data/articles                           |
| projet            | site/blog/data/articles + dépot du projet         |
| raccourci         | site/blog/data/articles + ajouter dans cheatsheet |
| trouvaille        | site/blog/data/articles                           |
| mémo              | site/blog/data/articles                           |

**** CANCELED choisir un beau thème
Fait à la main
***** TODO voir theme naxan
http://demo.pluxopolis.net/index.php?style=navan
**** TODO créer les dépôts
**** TODO fusionner l'ancien blog…
***** TODO les dossiers avec articles en .org/.org.html?
ils restent, et les nvx articles pointent dessus?
***** DONE anciens articles à rappatrier
***** TODO [#A] Mettre à jour les artictles
****** TODO lien vers org/org.html
****** TODO liens vers autres articles
******* TODO comment faire dans source?
****** TODO ~ en ‰
****** TODO réexporter pour espace insécable…

**** TODO la suite (old_blog)                                       :À_trier:
***** raf                                                          :old_blog:
****** TODO en profiter pour mettre une license ?
*******  http://www.gnu.org/licenses/license-list.html#OpinionLicenses
*******  https://github.com/renard/o-blog/tree/o-blog-v2/
*******  C0, mais évidemment, c'est mieux si d'où ça vient…
*******  http://draketo.de/light/english/emacs/babcore legalese


****** CANCELED exple de blogs avec ox :
******* http://www.seas.upenn.edu/~heqin/academic/sitecreation.html#
******* http://bzg.fr/blogging-from-emacs.html
****** CANCELED index
******* 2: 1 avec readmore, 1 sans
faire ça avec #+INCLUDE: "/data/Donnees/Sites/fredtantini/2014/03/20140308_des_raccourcis_en_vrac.org" :lines "10-" ?
****** CANCELED faire des index dans les dossiers/sous-dossiers et faire pointer up sur cet index
******* http://orgmode.org/manual/Sources-and-destinations.html#Sources-and-destinations
******** :preparation-function 
******* http://orgmode.org/manual/Publishing-action.html#Publishing-action
******* http://orgmode.org/manual/Publishing-options.html#Publishing-options
****** CANCELED theme/css
******* http://andersnoren.se/themes/lingonberry/
******* http://tonaldemo.wordpress.com/
******* http://caslay.com/tiny_theme/shortcodes-preview/
******* http://orgmode.org/worg/org-hacks.html
******* http://thenybble.de/projects/orgsite.html
******* http://vbrajon.fr/
****** TODO nouveau export/publish
***** old idées billet                                             :old_blog:
****** ce que j'aime
*******  bout de code
*******  hack

****** yin/yang (rapide/modulable…)
****** nginx ?

****** Save macros as functions
*******  http://draketo.de/light/english/emacs/babcore

****** emacs can tail log files
*******  RT @shamblepop: #Emacs can tail log files! Open read-only with C-x C-r <file> RET, then M-x auto-revert-tail-mode RET. Win!
******* http://twitter.com/twitter/status/444044904097132544
****** sublime text < emacs
******* http://sametmax.com/10-astuces-pour-sublime-text-2/
    
****** desktop mode
       liste des choses qu'on peut sauver, et qu'on peut tronquer
          
***** lab                                                          :old_blog:
****** FFFFFF
       r,g,b (ou h,s,v)
       une couleur de départ, 1 couleur d'arrivée, qu'est-ce qui a changé
******* plusieurs modes possibles
        qui peuvent se combiner
******** simple
         1 changement,  r vers haut ?
********* moyen 2 changements, dur 3 changements
******** donner la valeur d'arrivée, ok si moins de x, ou la différence donne x points, le but est de faire le moins de points possible
         àla jeu géographie distance/ville
******** avec ou sans temps
         àla flappybird
******* prendre code base sur https://github.com/gabrielecirulli/2048

****** nback
****** deluxe paint 3/flocon
****** jeu voiture V.
****** générateur PS1/screenrc
****** mots/chansons
****** tutos jeux html5
http://www.lessmilk.com/

****** html5 periodical table
    http://websitesetup.org/html5-periodical-table/
****** tag cloud en html5/js
    http://www.goat1000.com/tagcanvas.php
****** carousel javascript
http://codepen.io/koheishingai/pen/uKvJF
****** spiroghaphe
http://nathanfriend.io/inspirograph/

*** Site
    tout ce qui n’est pas article/rédaction

**** index à la racine qui redirige correctement

**** 2em sitemap 

*** Projet
**** réflexions organisation fichier
Tout ce qui a un dépot
***** nom_du_projet
      :PROPERTIES:
      :URL:  http://bitbucket.org/fredtantini/projet
      :FILE: /data/Perso/Python/projet
      :TITLE/DESCRIPTION: foobar
      :END:      
Notes/liens/choses sur le sujet
**** TODO [#A] réflexions organisation site/dépots publiques
***** articles
-> 1 dépot BB/GH
- articlesblog
  - 1 dossier par catégorie
***** lab/démos
-> 1 dépot/thème
- lab-css
- lab-html
- lab-js
- lab-php
***** snippets/cheatsheet
-> 1 dépot/thème-langage de prog
- snip-python
- snip-django
- snip-emacs
- snip-bash
- cheatsheet-bash
- cheatsheet-foo
https://github.com/kbroman/ProgrammingNotes
***** CANCELED quicklinks/shaarli
      - inclus dans articles

-> pas de dépôt?
***** CANCELED des pages statiques
-> 1 dépot
- liens pour css
- liens pour emacs
- liens pour python
- liens vers des choses bien…
***** dépôts individuels
choses parlées dans les articles
choses à tester
- some_ex_django
- pygal_et_musique
- pao & mem
***** ce fichier
**** TODO réflexions dépôts privés
***** notes-famille-prive
(pour quoi faire dans la maison, l'administratif, le jardin, la «vraie» vie)
****** TODO [#A] Penser les tags et le workflow des fichiers orgs
****** TODO Voir comment gérer l'agenda
      


***** notes-prive

*** CANCELED Notes
    - State "CANCELED" fichier notes principal

- Choses à lire
- Choses à essayer/tester
- Déplacer ensuite ici
* TODO [#A] Blog
** Catégories
*** diatribes
*** paremboles
**** PUBLIÉ [[file:2012/11/20121116_nettoyage_d_emacs.org][Le nettoyage de mon .emacs]]                        :mettre_à_jour:
**** PUBLIÉ [[file:2013/11/20131105_modifier_des_fichiers_en_masse.org][Modifier des fichiers en masse]]                    :mettre_à_jour:
**** PUBLIÉ [[file:2013/12/20131222_le_probleme_opendir_de_minigalnano_chez_free.fr.org][Le problÃ¨me opendir de MinigalNano chez Free.fr]]  :mettre_à_jour:
**** PUBLIÉ [[file:2014/05/20140518_un_peu_de_typographie_et_marquer_les_raccourcis_clavier_dans_org-mode.org][Un peu de typographie et marquer les raccourcis clavier dans org-mode]] :mettre_à_jour:
**** PUBLIÉ [[file:2014/07/20140721_difference_entre_eval-after-load_et_add-hook.org][DiffÃ©rence entre =eval-after-load= et =add-hook=]] :mettre_à_jour:
**** PUBLIÉ [[file:2014/07/20140729_recuperer_les_images_d_une_galerie_en_python.org][RÃ©cupÃ©rer les images dâ€™une galerie en python]]  :mettre_à_jour:
***** lien site
**** PUBLIÉ [[file:retenir_plus_facilement_-_ma_version_du_systeme_pao.org][Retenir plus facilement - ma version du systeme PAO]]
**** À_ÉCRIRE importance des commentaires (cf mail)
**** À_ÉCRIRE config pour git/bit
     À_ÉCRIRE ssh-add / script pour copier/coller, avoir les différents mails…
**** À_ÉCRIRE org-protocol

Pour windows :

Dans le dossier bin d’emacs, j'ai ajouté le fichier =em.cmd=
contenant :
#+BEGIN_SRC bat
@echo off
"%~dp0emacsclientw.exe" -na "%~dp0runemacs.exe" -c "%1"
#+END_SRC

Dans le fichier d’initialisation, =init.el= :
#+BEGIN_SRC elisp
;; pour emacs client
(server-start) 

;;; org-protocol
(add-to-list 'load-path "c:/Users/ftantini/AppData/Roaming/.emacs.d/elpa/org-20150622/")
(require 'org-protocol)

(setq org-protocol-default-template-key "l")
(setq org-capture-templates
 '(("l" "Link" entry (file+olp "C:\\Users\\ftantini\\Documents\\Divers\\orgnotes.org" "Web Links")
        "* %a\n %?\n %i")))
#+END_SRC

Si on veut plusieurs bookmarks :

#+BEGIN_SRC elisp
(setq org-protocol-default-template-key "l")
(setq org-capture-templates
 '(("t" "Todo" entry (file+headline "C:\\Users\\ftantini\\Documents\\Divers\\orgnotes.org" "Tasks")
        "* TODO %?\n  %i\n  %a")
   ("l" "Link" entry (file+olp "C:\\Users\\ftantini\\Documents\\Divers\\orgnotes.org" "Web Links")
        "* %a\n %?\n %i")
   ("j" "Journal" entry (file+datetree "C:\\Users\\ftantini\\Documents\\Divers\\orgnotes.org")
        "* %?\nEntered on %U\n  %i\n  %a")))
#+END_SRC

Attention, il a fallu que =Web Links= soit déjà un header du fichier.

Modification du registre :
#+BEGIN_SRC bat
REGEDIT4

[HKEY_CLASSES_ROOT\org-protocol]
"URL Protocol"=""
@="URL:Org Protocol"

[HKEY_CLASSES_ROOT\org-protocol\shell]

[HKEY_CLASSES_ROOT\org-protocol\shell\open]

[HKEY_CLASSES_ROOT\org-protocol\shell\open\command]
@="\"c:\\Users\\ftantini\\Progs\\emacs-24.5\\bin\\emacsclientw.exe\" \"%1\""

#+END_SRC


#+BEGIN_SRC javascript
javascript:location.href='org-protocol://org-capture://l/'+encodeURIComponent(location.href)+'/'+encodeURIComponent(document.title)+'/'+encodeURIComponent(window.getSelection());
#+END_SRC
Le sous-protocole n’est, pour moi, pas =capture=, mais bien
=org-capture= (cf ‰C-h v org-protocol-protocol-alist-default‰ pour
voir les protocoles par défaut).

La première fois que le bookmarklet est lancé, il demande avec quoi
ouvrir -> =em.cmd=


Voir également
http://sachachua.com/blog/2015/11/capturing-links-quickly-with-emacsclient-org-protocol-and-chrome-shortcut-manager-on-microsoft-windows-8/

*** guides
**** PUBLIÉ [[file:2014/06/20140607_le_demarrage_d_emacs.org][Le dÃ©marrage dâ€™Emacs]]                           :mettre_à_jour:

**** À_ÉCRIRE tuto orgmode
http://orgmode.org/worg/org-tutorials/#sec-7

**** À_ÉCRIRE [#A] enchantjs
*** snippet
**** À_ÉCRIRE Request-wget
*** lab
**** PUBLIÉ kriss pin                                         :mettre_à_jour:
**** PUBLIÉ cavalier
**** À_ÉCRIRE enchantjs
*** blog
**** À_ÉCRIRE [[file:2013/02/20130202_fonction_pour_creer_un_nouveau_billet.org][Fonction pour crÃ©er un nouveau billet]]
**** À_ÉCRIRE [[file:2013/04/20130421_le_flux_rss_est_dispo.org][Le flux RSS est dispo]]
**** À_ÉCRIRE nouvelle organisation/GTD
***** nouveau blog toussa
***** ANNULÉ lien vers  [[file:2012/11/20121110_config-org-publish-project-alist.org][Ma config d'org-mode pour la publication de ce site.]]
      CLOSED: [2016-02-25 jeu. 14:59]
**** COMMENCÉ [#A] org-plux
*** projets
**** À_ÉCRIRE recupKDOCE                                             :projet:
**** À_ÉCRIRE recupMem                                               :projet:
**** À_ÉCRIRE [[file:2013/01/20130126_fourmis_stupides_et_PyQt_2.org][Stupides fourmis et PyQt, acte 2]]                   :stupidants:
**** À_ÉCRIRE [[file:2013/01/20130123_elisp_liste_de_a_a_z.org][GÃ©nÃ©rer une liste de a Ã  z dans emacs]]           :stupidants:
**** À_ÉCRIRE [[file:2013/01/20130119_colonie_de_fourmis_stupides_et_PyQt_1.org][Utilisation de PyQt pour une colonie de fourmis]]    :stupidants:
**** À_ÉCRIRE [[file:2013/03/20130301_des_fourmis_et_des_pheromones_-_3eme_partie.org][Des fourmis et des phÃ©romones - 3Ã¨me partie]]      :stupidants:
**** À_ÉCRIRE [[file:2013/05/20130519_les_fourmis_suite_et_fin.org][Les fourmis, suite et fin]]                          :stupidants:
**** À_ÉCRIRE [[file:2014/02/20140205_gribouilli_pour_laisser_vos_petits_enfants_taper_sur_votre_clavier.org][gribouilli, pour laisser vos (petits) enfants taper sur votre clavier]] :gribouilli:
**** PUBLIÉ [[file:2013/02/20130228_trier_des_choses_sur_une_page_web.org][Trier des choses sur une page web]]          :projet:mettre_à_jour:
*** raccourcis
**** PUBLIÉ [[file:2013/12/20131221_agrandir_la_police_dans_emacs_avec_control_plus_roulette.org][Agrandir la police dans emacs avec control plus roulette]]

**** PUBLIÉ [[file:2014/03/20140308_des_raccourcis_en_vrac.org][Des raccourcis en vrac]]                            :mettre_à_jour:
+ link sachachua pas correct
**** PUBLIÉ [[file:2014/03/20140322_relancer_une_precedente_commande_en_ksh.org][Relancer une prÃ©cÃ©dente commande en ksh]]         :mettre_à_jour:
**** PUBLIÉ [[file:2014/04/20140414_une_espace_une_tabulation.org][Une espace une tabulation]]                         :mettre_à_jour:
liés liées / lien vers site
**** PUBLIÉ [[file:2014/05/20140520_edit_dans_dired_occured_awesome.org][Edit dans dired/occured = awesome]]                 :mettre_à_jour:
**** PUBLIÉ zap-up-to-char
Dans vi, on peut supprimer jusqu’à un caractère =c= avec ‰dtc‰ pour
garder le caractère, et ‰dfc‰ pour supprimer le caractère.

Dans emacs, on utilise ‰M-z‰ pour appeler =zap-to-char=. Et je viens
de trouver que =zap-up-to-char= existe…

Sur [[http://rubikitch.com/2015/09/02/zzz-to-char/][rubikitch.com]], sorte de [[http://irreal.org/blog/][irreal.org]], mais en japonais avec beaucoup
de présentation de thèmes, Rubikitch vient de présenter [[https://github.com/mrkkrp/zzz-to-char][zzz-to-char
(github)]], un =zap-to-char= à la sauce [[https://github.com/abo-abo/avy][avy (github)]], utilisé par
=ace-jump=. Dans sa description on peut lire : « which work like
built-ins zap-to-char and zap-up-to-char ». Et effectivement,
=zap-up-to-char= existe par défaut, mais n’est pas autoloadé. Il est
caché dans ~misc.el~ (avec =butterfly=). Du coup, soit on modifie le
fichier pour rajouter un autoload, soit on s’ajoute dans son
=init.el= :
#+BEGIN_SRC elisp
(require 'misc)
(global-set-key (kbd "M-Z") 'zap-up-to-char)
#+END_SRC
**** PUBLIÉ Emacs en vrac - 1
***** buffer-flip, une sorte de alt-tab pour buffer
Un mode mineur qui permet de faire passer les buffers à la manière
d'un ‰Alt+Tab‰ : https://github.com/killdash9/buffer-flip.el

Ça utilise key-chord.

(Via http://rubikitch.com/2015/11/19/buffer-flip/)
***** Python profiling
Julien Danjou explique comment mesurer et analyser le temps
d’exécution d’un programme python grâce à [[https://docs.python.org/2/library/profile.html][cProfile]] et [[https://kcachegrind.github.io/html/Home.html][KCacheGrind]].

https://julien.danjou.info/blog/2015/guide-to-python-profiling-cprofile-concrete-case-carbonara

***** Prendre des notes avec PDF-tools
[[https://github.com/politza/pdf-tools][PDF Tools]] permet de voir des PDF dans un buffer, de faire des
recherches, suivre un lien, mettre des annotations, et plein d’autres
choses. Matt Price en parle dans son [[http://matt.hackinghistory.ca/2015/11/11/note-taking-with-pdf-tools/][blog]], et montre comment exporter
les annotations pour org-mode.

Via http://irreal.org/blog/?p=4727

***** Changer de fenêtres, de façon visuelle
Une alternative à [[https://github.com/waymondo/ace-jump-buffer][ace-jump]], pour passer d’une fenêtre à l’autre quand
on fait un ‰C-x o‰ : [[https://github.com/dimitri/switch-window][switch-window]]
***** Changer les caractères utilisés pour l’ellipse par org-mode
Artur Malabarba explique que le =...= à la fin des /headlines/ est
personnalisable grâce à la variable =org-ellipsis=. J'ai donc changé
=...= par =…=

http://endlessparentheses.com/changing-the-org-mode-ellipsis.html

***** autotetris-mode
Emacs permet de jouer à tetris avec ‰M-x tetris‰. [[https://github.com/skeeto/autotetris-mode][autotetris-mode]]
permet de faire jouer une IA.

***** Indiquer la fin du buffer
La variable =toggle-indicate-empty-lines= permet de mettre dans la
marge un symbole pour indiquer la fin du fichier. Voir aussi [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Fringe-Bitmaps.html#Fringe-Bitmaps][Fringe-Bitmaps (emacs lisp manual)]]
**** PUBLIÉ Emacs en vrac - 2
***** Montrer les raccourcis non terminés plus tôt, et leurs suites possibles

En mettant la variable =echo-keystrokes= à 0.1 (source :
[[http://endlessparentheses.com/faster-keystroke-echo.html][endlessparentheses]]), les raccourcis non terminés (‰C-x r‰ par exemple)
s’affichent plus tôt.

Dans un autre genre, mais toujours pour les raccourcis
[[https://github.com/justbur/emacs-which-key][which-key]] est un mode mineur qui permet d’afficher les suites
possibles à un raccourci, tout comme [[https://github.com/kai2nenobu/guide-key][guide-key]].

***** Questionnaire avec org-mode
[[http://sachachua.com/blog/2015/11/org-mode-tables-fill-quizzes-latin-verb-conjugation-drills-emacs/][Sacha Chua]] apprend le latin et a codé un questionnaire plutôt sympa. À
mettre en relation avec =[[http://orgmode.org/worg/org-contrib/org-drill.html][org-drill]]=.

***** Marquer seulement une partie d’un mot
Si on veut [[http://fredtantini.free.fr/blog/index.php?article13/un-peu-de-typographie-et-marquer-les-raccorcus-clavier-dans-org-mode][marquer]] un mot avec org-mode (par exemple pour une =mise en
*gras*=), on est obligé de marquer le mot en entier. Une solution de
contournement est d’[[http://emacs.stackexchange.com/questions/18499/mark-up-only-part-of-a-word][insérer une espace de largeur zéro en unicode]].

***** highlight-tail
Inutile, mais fun, [[http://www.emacswiki.org/emacs/highlight-tail.el][highlight-tail]] est un mode qui change la couleur de
fond des dernières lettres tapées pour donner [[http://storage9.static.itmages.com/i/15/1201/h_1449009755_8397773_fcc8e3944e.png][ça]]. 

**** À_ÉCRIRE Emacs en vrac - 3
***** Vertical lines in org-mode table export
https://www.reddit.com/r/emacs/comments/481amv/vertical_lines_in_orgmode_table_export/
***** shorty : interactive shortcut demos in emacs
http://thescratchcastle.com/posts/interactive-shortcut-demos-in-emacs.html
***** how to add upstream with magit
https://www.reddit.com/r/emacs/comments/47o615/how_to_add_upstream_with_magit/
***** Adding captions and attributes to figures and tables from code blocks in org-mode
http://kitchingroup.cheme.cmu.edu/blog/2016/02/26/Adding-captions-and-attributes-to-figures-and-tables-from-code-blocks-in-org-mode/
***** search non-ascii characters
http://endlessparentheses.com/new-in-emacs-25-1-easily-search-non-ascii-characters.html
***** git timemachine
https://github.com/pidu/git-timemachine
***** focus mode
Seul le paragraphe qui a le focus est coloré https://github.com/larstvei/Focus
***** diff hl
https://www.reddit.com/r/emacs/comments/3z8f35/highlight_diffs_on_the_fly_with_diffhlflydiffmode/
***** epydoc snippets
http://tiborsimko.org/emacs-epydoc-snippets.html
***** keyboard macro
https://github.com/howardabrams/pdx-emacs-hackers/blob/master/workshops/keyboard-macros.org
***** emacs-fireplace
 A cozy fireplace for emacs. 
https://github.com/johanvts/emacs-fireplace
***** starwars crawl
http://mbork.pl/2015-12-18_Star_Wars_crawl_in_Emacs
***** Simple Emacs-based Subtitle Editor
http://mihai.bazon.net/projects/sese
***** skewer-mode
https://github.com/skeeto/skewer-mode
comme jsfiddle/codepen
http://emacs.stackexchange.com/questions/2376/how-to-use-skewer-mode
***** kurecolor
https://github.com/emacsfodder/kurecolor/
***** tdd save-hook
http://endlessparentheses.com/test-driven-development-in-cider-and-emacs.html?source=rss
***** togetherly
framapad dans emacs (voir aussi screen avec partage d’écran)
https://github.com/zk-phi/togetherly
***** aide contextuelle dans org-mode
 http://kitchingroup.cheme.cmu.edu/blog/2015/11/24/Contextual-help-in-org-mode/
***** orgzly 
 Orgzly: Notes & To-Do Lists

 https://play.google.com/store/apps/details?id=com.orgzly&hl=en

 http://www.orgzly.com/help/#Source

 https://www.reddit.com/r/emacs/comments/3ql5ga/online_orgmode_editor/

***** magit rebase video
 https://www.youtube.com/watch?v=vQO7F2Q9DwA

**** À_ÉCRIRE [[file:2014/06/20140610_rubrique-en-vrac.org][Rubrique-en-Vrac]]                                :mettre_à_jour:
*** trouvailles
**** PUBLIÉ Que fait Firefox sur le réseau quand on le démarre et faut-il y remédier ?
Un état des lieux de pourquoi firefox fait « tant » de requêtes au démarrage : http://aldarone.fr/que-fait-firefox-sur-le-reseau-quand-on-le-demarre-et-faut-il-y-remedier/

En bref : laisser firefox faire son boulot !
**** PUBLIÉ bloquer les pubs pour charger plus vite ?
Via [[http://www.zdnet.fr/actualites/adblockers-et-performances-quels-gains-pour-charger-une-page-web-39824012.htm][zdnet]] : quelqu’un (Raymond) a comparé des bloqueurs de pub d’un point de vue performance (temps de chargement de la page, utilisation CPU et utilisation mémoire). Son vainqueur : [[https://github.com/gorhill/uBlock][µBlock origin]], suivi par Ghostery et [[https://github.com/AdguardTeam/AdguardBrowserExtension][Adguard]]. À noter que Ghostery est propriétaire. D’autres alternatives et autres modules complémentaires, sur [[https://prism-break.org/fr/subcategories/gnu-linux-web-browser-addons/][prism-break.org]].
**** PUBLIÉ Gestion sémantique de version
Les règles pour les numéros de versions : 
****** En bref

Étant donné un numéro de version MAJEUR.MINEUR.CORRECTIF, il faut incrémenter :

1. le numéro de version MAJEUR quand il y a des changements rétro-incompatibles,
2. le numéro de version MINEUR quand il y a des changements rétro-compatibles,
3. le numéro de version de CORRECTIF quand il y a des corrections d’anomalies rétro-compatibles

Des libellés supplémentaires peuvent être ajoutés pour les versions de
pré-livraison et pour des méta-données de construction sous forme
d'extension du format MAJEURE.MINEURE.CORRECTIF.

[[http://semver.org/lang/fr/][source : semver.org]]
**** PUBLIÉ Des programmes de journalistes
En regardant mes flux avec [[http://tontof.net/kriss/feed/][KrISS feed]], je suis tombé sur un [[http://sebsauvage.net/links/?wCqKzg][lien]] de
sebsauvage sur [[http://tabula.technology/][Tabula]], un outil open source ([[https://github.com/tabulapdf/tabula/blob/master/LICENSE.md][libre]] ?) pour extraire
les tableaux des PDF. En regardant sur la page du projet, je vois un
lien vers
http://source.mozillaopennews.org/en-US/articles/introducing-tabula/
qui redirige vers
https://source.opennews.org/en-US/articles/introducing-tabula/. 

Je regarde donc ce qu’est opennews ; pour les [[https://opennews.org/][citer]] : 
#+BEGIN_QUOTE
OpenNews is a joint project of Mozilla and the Knight Foundation that
supports the growing community of news developers, designers, and data
reporters helping journalism thrive on the open web.
#+END_QUOTE

Et sur https://source.opennews.org/en-US/ :
#+BEGIN_QUOTE
Source is a Knight-Mozilla OpenNews project
designed to amplify the impact of journalism code and the community of
developers, designers, journalists, and editors who make it.
#+END_QUOTE

Du coup, je fouille un peu [[https://source.opennews.org/][source.opennews.org]] et je vois des outils
comme tabula (oh ‽) ; [[https://source.opennews.org/en-US/learning/natural-language-processing-made-easier-pipes/][broca]], une bibliothèque python pour faire de la
nlp ; plein d’outils pour faire des cartes : [[http://leafletjs.com/][leaflet]], [[http://www.macwright.org/englewood.js/][englewood.js]],
[[http://propublica.github.io/simple-tiles/][simple tiles]], [[http://propublica.github.io/simpler-tiles/][simpler tiles]], [[http://code.minnpost.com/tulip/][tulip]] ; [[http://datanews.github.io/tik-tok/][Tik Tok]] pour faire des lignes de
temps ; du jquery ; du django ; et moultes autres choses rencensées ici :
https://source.opennews.org/en-US/code/

Et plus intéressant encore, des billets sur comment ont été faits
certains articles ou outils. Par exemple : [[https://source.opennews.org/en-US/articles/how-we-made-losing-ground/][comment]] a été fait le site
[[https://projects.propublica.org/louisiana/]] pour lequel ont été
mélangées images satellites, données, cartes historiques. Ou alors
pourquoi quelqu’un a créé un [[https://source.opennews.org/en-US/learning/automating-transparency/][robot twitter]] qui tweete quand une page
wikipedia a été éditée anonymement par le congrès américain. Qui a été
forké pour pleins d’autres gouvernements/parlements/… (rien pour la
[[http://jarib.github.io/anon-history/][France]] pour le moment semble-t-il) dont les tweets
sont ensuite « repris » par le Washington Post, Global Voices, Wired…

Bref, allez faire un tour sur  https://source.opennews.org/en-US/ !

**** PUBLIÉ Du bon message de commit

Les sept règles d’après [[http://chris.beams.io/posts/git-commit/][Chris Beams]] :
#+BEGIN_QUOTE
1. Séparez le sujet du corps par une ligne vide
2. Limitez le sujet à 50 caractères
3. Mettez une capitale au sujet
4. Ne mettez pas de point à la fin du sujet
5. Utilisez l’impératif dans le sujet
6. Retournez à la ligne à 72 caractères
7. Utilisez le corps pour expliquer quoi et pourquoi vs. comment
#+END_QUOTE


Comme il le conseille, allez également jeter un œil au livre [[http://git-scm.com/book/fr/v2][pro git]].
(Je préfère la version anglaise ; les traductions de certains termes
techniques — stash, merge… — me troublent quelque peu.)

Pour [[http://magit.vc/][magit]], voir les variables utilisées dans le buffer d’[[http://magit.vc/manual/magit/Editing-commit-messages.html#index-git_002dcommit_002dsummary_002dmax_002dlength][édition du
message]] comme =git-commit-summary-max-length= ou =git-commit-fill-column=.

**** PUBLIÉ Comment faire un adblock avec =bind= et =apache=
 http://charlieharvey.org.uk/page/adblocking_with_bind_apache

**** PUBLIÉ Faire des GIFs à partir de vidéos en python
Pour cela, Zulko utilise [[https://github.com/Zulko/moviepy][MoviePy (github)]] — en même temps, c’est de
lui :þ. Il montre comment faire convertir des bouts de vidéos,
recadrer, figer une partie de l’image, ajouter du texte… [[http://tontof.net/?2015/07/24/11/43/30-blender-la-solution-pour-le-montage-video][Tontof]] en
avait déjà subrepticement parlé ; il va falloir que je regarde ça de
plus près.
http://zulko.github.io/blog/2014/01/23/making-animated-gifs-from-video-files-with-python/

**** PUBLIÉ Votre navigateur est
Un site qui détecte le navigateur, l’os, la résolution d’écran, si
java ou flash sont installés, si on est connecté sur
facebook/twitter/google/… : http://yourbrowser.is/
**** PUBLIÉ Couleurs de pokémon
Pour les fans de pocket monsters, voici un site qui affiche les
couleurs de chaque pokémon : http://pokepalettes.com/. La galerie (via
le lien en bas à droite, pas très visible) : http://imgur.com/a/lHVGx

Via [[http://www.waxy.org/links/archive/2015/08/index.shtml#082396][waxy.org]].
**** PUBLIÉ HTML6
Voilà une info qui m’avait jusqu’à présent échappé : HTML6 (et CSS4)
sont en route ! (Heureusement que d’autres personnes font de la
meilleure veille que moi…).
Quelques liens pour commencer :
- https://lists.w3.org/Archives/Public/public-whatwg-archive/2015Mar/0071.html
- http://www.devbattles.com/en/sand/post-937-W3C+member+proposes+singlepage+apps+without+JavaScript+in+HTML6
- https://solutionscurved.wordpress.com/2015/07/14/html6-deeper-look/

(Merci P.B.)
**** PUBLIÉ Avoir un mot de passe sûr, et s’en souvenir. Merci la poésie.
L’info a été reprise un [[http://sebsauvage.net/links/?xSuw9w][peu]] [[http://cyrille-borne.com/veille/index.php?article244/pour-2-cette-jeune-fille-vous-creee-un-mot-de-passe-a-toute-epreuve][partout]] (pour ne citer qu’eux, eux-même
citant rue89/tomsguide), une fille de 11 ans jette les dés pour vous
créer des mots de passe. Parce que vous ne savez pas jeter de dés vous
même… 

Pour éviter de payer 2$ et si vous n’avez pas de dés sous la
main, [[http://correcthorsebatterystaple.net/][des]] [[http://tools.aldarone.fr/password/][sites]] se basant sur une planche de [[http://xkcd.com/936/][xkcd]] vous permettent même
de créer vous-même votre mot de passe. Et sinon, il y a duckduckgo
pour [[https://duckduckgo.com/?q%3Droll%2B3d7&t%3Dffab&ia%3Danswer][lancer]] des [[https://duckduckgo.com/?q%3Droll%2Bdice&t%3Dffab&ia%3Danswer][dés]], ou créer une [[https://duckduckgo.com/?q%3Drandom%2Bpassphrase&t%3Dffab&ia%3Danswer][passphrase]]. Ou la [[http://www.commandlinefu.com/commands/view/9146/generate-an-xkcd-936-style-4-word-passphrase-fast][ligne de commmande]].

Parce que oui, ce que dit xkcd, c’est qu’une passphrase, c’est mieux
qu’un password. Parce que c’est plus long. Par contre, les mots étant
aléatoires, le mot/phrase de passe n’est pas forcément plus simple à
se rappeler (et souvent on est limité en taille de mot de passe…).

Et c’est là que des chercheurs proposent une alternative : de vraies
phrases, voire de la [[http://www.isi.edu/natural-language/mt/memorize-random-60.pdf][poésie (pdf)]], en générant aléatoirement deux
[[http://www.wikiwand.com/fr/T%C3%A9tram%C3%A8tre][tétramètres]] [[http://www.wikiwand.com/fr/Iambe][iambiques]] qui riment (en Français, ça donne : 2 lignes de
8 syllabes :þ). Comme c’est généré aléatoirement, ça donne des phrases
pas terribles, au milieu d’autres plutôt mémorable. Et si on passait
tous au [[http://www.wikiwand.com/fr/Ha%C3%AFku][haïku]]pass ?

Via [[http://hackaday.com/2015/10/26/a-more-correct-horse-battery-staple/][hackaday.com]].

**** PUBLIÉ youtube bloqué par le proxy ? Utilisez duckduckgo !
Vous voulez regarder une vidéo incluse dans une page, mais bloquée par
votre proxy. Pour cela, récupérez le titre de la vidéo (avec un peu de
chance, il est affiché dans la page) : regardez le code source de la
page (‰C-u‰), faites une recherche (‰C-f‰)sur le mot « =youtube= », et récupérer la
suite de caractères après le =embed=. Ensuite rechercher avec duckduckgo
le titre de la vidéo, puis ajouter « !v ». Et là, la vidéo s’affiche !

Par exemple, vous trouvez dans le code source de la page le lien
http://www.youtube.com/embed/iigHeKZw-JQ -> vous cherchez
https://duckduckgo.com/?q=iigHeKZw-JQ -> puis 
https://duckduckgo.com/?q="duck+duck+go+vs+google+search"+!v


En fait, ddg utilise youtube-nocookie.com et du coup, si vous avez
l’adresse de la vidéo, vous pouvez juste ajouter =-nocookie=. Sauf que
montrer ce que sait faire le canard, c’est plus sympa ;þ

**** PUBLIÉ Lorem Ipsum pour les images                                 :web:
Quand on développe un site, pour travailler la mise en page, on
utilise un faux-texte, le fameux /Lorem Ipsum/. Mais pour les images ?

J’étais en train de jouer un peu avec les transitions en css, quand je
me suis dit que ce serait bien d’avoir des images. Un coup de
[[https://duckduckgo.com/?q=lorem+ipsum+image&t=ffsb][duckduckgo]] plus tard, et me voilà avec deux sites plutôt sympa pour
générer des images :

- http://lorempixel.com/ propose plusieurs catégories d’images — issues
  de flickr en CC BY-SA — que l’on peut paramétrer selon la taille, la
  catégorie, couleur ou N&B, et l’ajout de texte :
#+BEGIN_SRC html
<img src="http://lorempixel.com/g/400/200/nature/3/Mon texte" />
#+END_SRC
  affichera la 3^e image de la catégorie nature en 400×200 noir et
  blanc (le /g/) avec le texte « Mon texte » :
#+BEGIN_HTML
<img src="http://lorempixel.com/g/400/200/nature/3/Mon texte" />
#+END_HTML

#+BEGIN_SRC html
<img src="http://lorempixel.com/400/200/" />
#+END_SRC
  affichera une image de 400×200 en couleur de n’importe quelle catégorie :
#+BEGIN_HTML
<img src="http://lorempixel.com/400/200/" />
#+END_HTML

- le second, http://dummyimage.com/, propose des images plus simples,
  et qui correspondent mieux à des besoins de tests d’agencement : du
  texte sur un fond uni. On peut là aussi régler plusieurs choses : la
  taille, la couleur du texte et du fond, le format de l’image…
  Certaines tailles sont prédéfinies : fullbanner, button1, svga,
  ntsc, /etc./

#+BEGIN_SRC html
<img src="http://dummyimage.com/300" />
#+END_SRC
  affichera l’image :
#+BEGIN_HTML
<img src="http://dummyimage.com/300" />
#+END_HTML
Le texte par défaut, c’est la taille de l’image.
#+BEGIN_SRC html
<img src="http://dummyimage.com/rectangle/bd954f/ffffff.png&text=Mon+texte" />
#+END_SRC
  affichera l’image au format png de 180×150 :
#+BEGIN_HTML
<img src="http://dummyimage.com/rectangle/bd954f/ffffff.png&text=Mon+texte" />
#+END_HTML

Il y en a bien entendu plein d’autres, mais ceux-ci me conviennent parfaitement.

**** PUBLIÉ Des graphes à la xkcd                         :python:matplotlib:
Utiliser python pour faire des graphes à la [[http://xkcd.com][xkcd]], c’est possible grâce
aux développeurs de [[http://matplotlib.org/xkcd/examples/showcase/xkcd.html][matplotlib]] ! Stéphane Blondon nous en parle sur
son [[https://ascendances.wordpress.com/2016/02/26/des-graphiques-a-la-xkcd/][blog]] avec quelle police utiliser et dans quel paquet Debian elle
se trouve.

**** PUBLIÉ Bouge une allumette pour former un carré                 :puzzle:
     CLOSED: [2016-02-28 dim. 17:13]
Vous connaissez sûrement l’énigme suivante : « comment former quatre
triangles équilatéraux avec six allumettes ? » Si vous aimez ce genre
de « puzzles », allez faire un tour sur
http://matchstickpuzzles.blogspot.fr/, vous aurez plus de 300
devinettes pour vous divertir…

Via [[http://www.metafilter.com/157489/Matchstick-Puzzles][MeFi]].
**** Tester son courrier électronique avec des auto-répondeurs
http://www.bortzmeyer.org/repondeurs-courrier-test.html
**** sweetalert :web:css:
Pour remplacer les alerts des navigateurs par quelque chose de plus
mieux beau : http://t4t5.github.io/sweetalert/
**** big-list-of-naughty-strings
https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt
**** À_ÉCRIRE templates pages web
- http://html5up.net/ Full responsive, html5+css3, customisable, licence
cc-by

- http://www.os-templates.com/free-website-templates

- http://www.templatemo.com/page/1

- http://www.templatesdock.com/free-web-templates.php



Via http://cyrille-borne.com/article2141/html5-up
**** À_ÉCRIRE script
https://roidelapluie.be/blog/2015/07/04/script/
**** À_ÉCRIRE lettres en fractales
http://www.standardabweichung.de/design/projekte/html5/design-font-fractalism
via http://www.metafilter.com/153570/My-God-its-full-of-letters
**** À_ÉCRIRE spyrographe
http://wheelof.com/sketch/ via
http://www.waxy.org/links/archive/2015/08/index.shtml#082404

voir sur les shaarli, il y en a un autre qqpart…
**** À_ÉCRIRE diffy
https://github.com/twitter/diffy
What is Diffy?

Diffy finds potential bugs in your service using running instances of
your new code and your old code side by side. Diffy behaves as a proxy
and multicasts whatever requests it receives to each of the running
instances. It then compares the responses, and reports any regressions
that may surface from those comparisons. The premise for Diffy is that
if two implementations of the service return “similar” responses for a
sufficiently large and diverse set of requests, then the two
implementations can be treated as equivalent and the newer
implementation is regression-free.
**** À_ÉCRIRE ngram
***** ngram google
http://www.wired.com/2015/11/google-open-sources-its-artificial-intelligence-engine
***** tensorflow
TensorFlow is an Open Source Software Library for Machine Intelligence
http://tensorflow.org/

***** ngram reddit
http://projects.fivethirtyeight.com/reddit-ngram/?keyword=lebron.rodgers.trout&start=20071015&end=20150831&smoothing=10

**** À_ÉCRIRE Synthèse vocale
https://tuxicoman.jesuislibre.net/2015/05/synthese-vocale-sous-linux.html
https://github.com/Celebio/congratulator/blob/master/callandspeak.py

*** mémo
**** PUBLIÉ [[file:2013/05/20130519_encoder_avec_mencoder.org][Encoder avec mencoder]]                             :mettre_à_jour:
**** PUBLIÉ [[file:2014/07/20140728_quelques_notes_soapui.org][Quelques notes SoapUI]]                             :mettre_à_jour:
**** PUBLIÉ Python Module of the Week
Note pour moi-même.

Les modules des « module python de la semaine » : https://pymotw.com/2/contents.html

Par ordre alphabétique : https://pymotw.com/2/py-modindex.html

Pour info, pymotw est/était la présentation par [[http://www.doughellmann.com/][Doug Hellmann]] d’un
module python avec des exemples de codes. Les sources sont disponibles
sur [[http://bitbucket.org/dhellmann/pymotw/][bitbucket]].

Pour python 3 : https://pymotw.com/3/
**** PUBLIÉ Besoin de se dégourdir les doigts ?               :mettre_à_jour:
# voir https://github.com/leereilly/games
# voir comm'
Parfois on a (j’ai) envie de coder (ou faire coder des étudiants) et
on ne sait pas quoi faire — ou alors on veut s’entrainer, tester de
nouvelles choses. Voici une liste non-exhaustive de sites web — non
testés pour la plupart — qui proposent des exercices pour apprendre à
programmer, des défis pour faire s’affronter des programmes, voire
pour gagner de l’argent (mais ce n’est pas le sujet).

# Fin chapeau


En fait, l’idée de l’article est parti de la lecture de ce site :
http://inventwithpython.com/blog/2012/02/20/i-need-practice-programming-49-ideas-for-game-clones-to-code/.
Et effectivement, coder des petits jeux, c’est toujours plus sympa que
faire des cribles d’Ératosthène ou des suites de fibonacci. Mais ça
prend plus de temps… (Je mets quand même certains sites comme
projecteuler, parce que je crois que j’ai commencé par lui, et qu’il
est quand même relativement connu — me semble-t-il.)

Les sites qui permettent d’apprendre à coder sont tout aussi sympa si
on veut changer de langages, mais bien souvent, ils partent /from
scratch/ et quand on connaît quelques langages (et même un seul), il
suffit — bien souvent — juste de connaître la syntaxe du =if/for/class=
pour être capable de programmer. (Les bonnes pratiques, c’est autre
chose par contre.)
 
J’ai essayé de regrouper par thème. N’hésitez pas à rajouter des
sites.

  - des exercices ou challenges, avec parfois la solution des autres,
    une fois qu’on a réussi :
    - https://www.newbiecontest.org/ : des challenges de
      programmation, de hacking…, le langage que l’on veut. Vaut le détour.
    - https://projecteuler.net/ : exercices assez théoriques, le
      langage que l’on veut.
    - http://codegolf.stackexchange.com/ : le langage que l’on veut,
      mais souvent le code le plus court gagne. On découvre alors des
      langages comme Pyth, CJam…
    - http://codewars.com/ : limité à CoffeeScript, JavaScript,
      Python, Ruby, Java, Clojure, Haskell et C#
    - https://www.reddit.com/r/dailyprogrammer : voir aussi
      https://www.reddit.com/r/dailyprogrammer/wiki/index#wiki_other_subreddits
    - Non testés, mais dans mes liens :
    - https://www.codingame.com/start
    - http://exercism.io/
    - http://codeforces.com/
    - http://rosalind.info/problems/locations/
    - https://www.hackerrank.com/
    - http://www.codechef.com/
    - http://programmingpraxis.com/
    - http://www.spoj.com/
    - https://www.hackerearth.com/problems/
    - https://www.codechef.com/problems/easy
    - http://coderbyte.com/CodingArea/Challenges/
    - https://www.codingame.com/games
  
  - affronter d’autres programmes :
    - http://codegolf.stackexchange.com/questions/tagged/king-of-the-hill (souvent n’importe quel langage)
    - http://fightcodegame.com/ (javascript)
    - http://www.hacker.org/
    - https://robotgame.net/ (python)
    - http://leekwars.com/ (langage propre au jeu)
    - http://scalatron.github.io/ (scala)
    - http://www.battlecode.org/ (MIT, java/scala)
    - https://schemaverse.com/ (PL/pgSQL)
    - http://vindinium.org/ (n’importe quel langage)
    - http://game-ai.gatech.edu/ (python)
    - http://robocode.sourceforge.net/ (.NET, java. Attention,
      [[http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/][sourceforge]]. Merci [[http://fredtantini.free.fr/blog/index.php?article28/besoin-de-se-degourdir-les-doigts#c1442916180-1][Mathieu]].)
    - http://codecombat.com/
    - http://aisandbox.com/home
    - voir également https://www.reddit.com/r/gameai/
  
  - spécifiques à un langage :
    - http://www.pythonchallenge.com/
    - http://rubyquiz.com/
    - http://www.gowrikumar.com/c/index.php
    - https://sites.google.com/site/prologsite/prolog-problems
    - https://bitbucket.org/gregmalcolm/python_koans et autres
      [langage] koans
  
  - refactoring/code review :
    - http://codereview.stackexchange.com/
    - https://codility.com/programmers/
  
  - idées de jeux/le programme d’autres personnes à refaire dans un
    autre langage :
    - http://www.ioccc.org/ : International Obfuscated C Code Contest
      (des grands malades)
    - http://js13kgames.com/ : des jeux en 13 kilobytes
    - http://js1k.com/ : en 1024 bytes
    - http://ludumdare.com/compo/
    
  - permet de gagner de l’argent/des prix :
    - http://www.topcoder.com/
    - https://www.hackerearth.com/
    - https://www.codeeval.com/
    - https://www.kaggle.com/
    - http://www.azspcs.net/
    - https://code.google.com/codejam 
  
*** non classé
**** À_ÉCRIRE TODO envoyer fichiers port056
voir les .org dispos + faire sur cft?
**** À_ÉCRIRE squash/soap/travail
*** Snippets
**** À_ÉCRIRE TIL
 https://github.com/jbranchaud/til

** Statiques
*** Cheatsheet
**** PUBLIÉ emacs
***** TODO info à mettre à jour (lien(s) fichier(s) source)
*** À_ÉCRIRE TIL
[[file:notes.org::*TIL][cf notes.org]]
*** liste projets ?
*** lab
**** PUBLIÉ gol
**** PUBLIÉ kriss pin
**** PUBLIÉ cavalier
**** À_ÉCRIRE Essais CSS/html
***** scroll 
****** scroll CSS/JS
http://blog.gospodarets.com/css-scroll-snap/
https://github.com/peachananr/purejs-onepage-scroll

****** parallax
http://stackoverflow.com/questions/20021846/parallax-scrolling-with-css-only
http://keithclark.co.uk/articles/pure-css-parallax-websites/
https://kremalicious.com/showcasing-the-css-parallax-effect-12-creative-usages/
****** menu (scroll sur la page -> sélection du bon item)
cf
http://www.frandroid.com/comment-faire/tutoriaux/311391_les-meilleurs-tutoriels-pour-apprendre-a-maitriser-android
par exemple
***** transition
http://inspiretrends.com/css3-transitions-and-animations-effects-tutorials/
http://geebart.com/blog/easy-css3-transitions-tutorial
***** selectors
http://www.pageresource.com/css3/selectors-tutorial/
http://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048
http://code.tutsplus.com/fr/tutorials/the-30-css-selectors-you-must-memorize--net-16048
***** showcases
http://www.w3schools.com/cssref/tryit.asp?filename=trycss3_image_gallery
http://css3generator.com/
http://www.mezzoblue.com/zengarden/alldesigns/(http://www.csszengarden.com/)
http://www.css3.com/
http://www.css3.info/preview/css3-transitions/
http://www.divinecss.com/
http://csselite.com/
http://code.tutsplus.com/series/css3-mastery--net-18126
***** a trier
****** arc-en-ciel 1 ligne de css
http://codepen.io/Nico_KraZhtest/pen/XbeVzM
****** portes logiques en css
http://silon.slaks.net/#gates
****** timing des animations et transitions en css3
    http://www.alsacreations.com/tuto/lire/1299-timing-des-animations-et-des-transitions-en-css3.html
****** animate.css
http://daneden.github.io/animate.css/
****** du css 
(générateurs, filter effects, snippets, demos…) http://www.cssreflex.com/
****** exemples d'hover en css
http://tympanus.net/Development/HoverEffectIdeas/
http://ianlunn.github.io/Hover/
https://github.com/gudh/ihover/blob/gh-pages/src/ihover.css
****** fenetre modale
http://tympanus.net/Development/ModalWindowEffects/
****** filtres css
http://iamvdo.me/en/blog/advanced-css-filters
*** À_ÉCRIRE Les choses qu’on peut installer chez soi/sur free, à la frama*
*** À_ÉCRIRE a propos
- nouvelle organisation
- nouveaux flux
  - raccourcis pas affichés, trop orientés emacs
* TODO Site
** index/racine
*** reprendre l’a propos du blog
** 404
** sitemap
** flux rss
*** DONE catégories à ne pas mettre dans le flux
raccourcis ne me semble pas pertinant -> on le laisse s’afficher dans
le menu, mais les articles ne s’affiche pas sur l’écran (admin ->
catégorie -> éditer-> Afficher les articles de cette catégorie sur la
page d'accueil)
**** modification
cf https://github.com/pluxml/PluXml/issues/11
https://github.com/pluxml/PluXml/pull/29/files

* TODO Projets

** .emacs.d
      :PROPERTIES:
      :URL:  https://bitbucket.org/fredtantini/.emacs.d/
      :FILE: ~/.emacs.d/
      :DESCRIPTION: config emacs
      :END:      
config d'emacs, custom séparé

** kdoce

** recupmem
** réseau neurone                                                      :labo:
plein de neurones, 1 clic sur 1 -> propagation de l’info avec atténuation
** spyrograph                                                          :labo:
** COMMENCÉ enchant.js
http://games.jsdo.it/
http://jsdo.it/ponzupan/codes?page=2
http://jsdo.it/ponzupan/QA6s
http://9leap.net
http://tmlife.net/programming/javascript/enchant-js-100-tips.html
http://www32.atwiki.jp/nakamura001/pages/149.html

http://coderdojodenver.tumblr.com/post/108389130394/javascript-browser-games
http://mkonar.org/edu/games/enchantjs/fundamentals/


http://enchantjs.com/live-sample/index.html
http://users.csc.calpoly.edu/~foaad/enchant/

http://r.jsgames.jp/games/4629/ mariolike
http://r.jsgames.jp/games/1770/ physique/incredible time machine
http://r.jsgames.jp/games/2727/ saute et ne peut bouger gch/dte qu'en l'air 
http://r.jsgames.jp/games/382/ vite choisir la plateforme de la bonne couleur
http://r.jsgames.jp/games/416/ a la crepuscud


joinz
2048
mario
ski
http://www.twinpedia.com/kadokado#les_jeux
*** sprite
http://www.spriters-resource.com/game_boy_advance/cars/
http://www.ideaxidea.com/archives/2011/04/enchant_rgb_undocumented.html
http://www.ideaxidea.com/archives/2011/04/rpg_2.html
http://www.ideaxidea.com/archives/2011/04/rpg_3.html
http://www.ideaxidea.com/archives/2011/04/rpg_4.html
http://oredon.kidukilab.com/blog/2014/04/enchantjs-tilemap.php
** koalastothemax
http://www.koalastothemax.com/
** pixels figthing
http://pixelsfighting.com/
